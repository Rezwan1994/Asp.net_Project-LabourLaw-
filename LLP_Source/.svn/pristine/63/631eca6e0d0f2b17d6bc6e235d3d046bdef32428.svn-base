USE llpdb
GO

/****** Object:  StoredProcedure [dbo]..InsertPasswordReset    Script Date: 2/14/2018 5:18:57 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[InsertPasswordReset]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[InsertPasswordReset]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE InsertPasswordReset
(
	@Id int OUTPUT,
	@CompanyId uniqueidentifier,
	@UserId uniqueidentifier,
	@PasswordSalt nvarchar(250),
	@IsUsed bit,
	@ResetCounter int,
	@UserIP nvarchar(50),
	@UserAgent nvarchar(max),
	@PageUrl nvarchar(max),
	@IsActive bit,
	@LastUpdatedDate datetime
)
AS
    INSERT INTO [dbo].[PasswordReset] 
	(
	[CompanyId],
	[UserId],
	[PasswordSalt],
	[IsUsed],
	[ResetCounter],
	[UserIP],
	[UserAgent],
	[PageUrl],
	[IsActive],
	[LastUpdatedDate]
    ) 
	VALUES 
	(
	@CompanyId,
	@UserId,
	@PasswordSalt,
	@IsUsed,
	@ResetCounter,
	@UserIP,
	@UserAgent,
	@PageUrl,
	@IsActive,
	@LastUpdatedDate
    )
	DECLARE @Err int
	DECLARE @Result int

	SET @Result = @@ROWCOUNT
	SET @Err = @@ERROR 
	If @Err <> 0 
	BEGIN
		SET @Id = -1
		RETURN @Err
	END
	ELSE
	BEGIN
		If @Result = 1 
		BEGIN
			-- Everything is OK
			SET @Id = @@IDENTITY
		END
		ELSE
		BEGIN
			SET @Id = -1
			RETURN 0
		END
	END

	RETURN @Id
GO

/****** Object:  StoredProcedure [dbo].UpdatePasswordReset    Script Date: 2/14/2018 5:18:57 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[UpdatePasswordReset]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[UpdatePasswordReset]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE UpdatePasswordReset
(
	@Id int,
	@CompanyId uniqueidentifier,
	@UserId uniqueidentifier,
	@PasswordSalt nvarchar(250),
	@IsUsed bit,
	@ResetCounter int,
	@UserIP nvarchar(50),
	@UserAgent nvarchar(max),
	@PageUrl nvarchar(max),
	@IsActive bit,
	@LastUpdatedDate datetime
)
AS
    UPDATE [dbo].[PasswordReset] 
	SET
	[CompanyId] = @CompanyId,
	[UserId] = @UserId,
	[PasswordSalt] = @PasswordSalt,
	[IsUsed] = @IsUsed,
	[ResetCounter] = @ResetCounter,
	[UserIP] = @UserIP,
	[UserAgent] = @UserAgent,
	[PageUrl] = @PageUrl,
	[IsActive] = @IsActive,
	[LastUpdatedDate] = @LastUpdatedDate
	WHERE ( Id = @Id )

	DECLARE @Err int
	DECLARE @Result int
	SET @Result = @@ROWCOUNT
	SET @Err = @@ERROR 

	If @Err <> 0 
	BEGIN
		SET @Result = -1
	END

	RETURN @Result
GO

/****** Object:  StoredProcedure [dbo].DeletePasswordReset    Script Date: 2/14/2018 5:18:57 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeletePasswordReset]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DeletePasswordReset]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE DeletePasswordReset
(
	@Id int
)
AS
	DELETE [dbo].[PasswordReset] 

    WHERE ( Id = @Id )

	DECLARE @Err int
	DECLARE @Result int

	SET @Result = @@ROWCOUNT
	SET @Err = @@ERROR 

	If @Err <> 0 
	BEGIN
		SET @Result = -1
	END

	RETURN @Result
GO

/****** Object:  StoredProcedure [dbo].GetAllPasswordReset    Script Date: 2/14/2018 5:18:57 PM  ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetAllPasswordReset]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetAllPasswordReset]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE GetAllPasswordReset
AS
	SELECT *		
	FROM
		[dbo].[PasswordReset]

RETURN @@ROWCOUNT
GO

/****** Object:  StoredProcedure [dbo].GetPasswordResetById    Script Date: 2/14/2018 5:18:57 PM  ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetPasswordResetById]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetPasswordResetById]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE GetPasswordResetById
(
	@Id int
)
AS
	SELECT *		
	FROM
		[dbo].[PasswordReset]
	WHERE ( Id = @Id )

RETURN @@ROWCOUNT
GO

/****** Object:  StoredProcedure [dbo].GetPasswordResetMaximumId    Script Date: 2/14/2018 5:18:57 PM  ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetPasswordResetMaximumId]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetPasswordResetMaximumId]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE GetPasswordResetMaximumId
AS
	DECLARE @Result int
	SET @Result = 0
	
	SELECT @Result = MAX(Id) 		
	FROM
		[dbo].[PasswordReset]

	If @Result > 0 
		BEGIN
			-- Everything is OK
			RETURN @Result
		END
		ELSE
		BEGIN
			RETURN 0
		END
RETURN @Result
GO

/****** Object:  StoredProcedure [dbo].GetPasswordResetRowCount    Script Date: 2/14/2018 5:18:57 PM  ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetPasswordResetRowCount]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetPasswordResetRowCount]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE GetPasswordResetRowCount
AS
	DECLARE @Result int
	SET @Result = 0
	SELECT @Result = COUNT(*) 		
	FROM
		[dbo].[PasswordReset]
		
RETURN @Result
GO

/****** Object:  StoredProcedure [dbo].GetPagedPasswordReset    Script Date: 2/14/2018 5:18:57 PM  ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetPagedPasswordReset]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetPagedPasswordReset]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE GetPagedPasswordReset
(
	@TotalRows		int	OUTPUT,
	@PageIndex	int,
	@RowPerPage		int,
	@WhereClause	nvarchar(4000),
	@SortColumn		nvarchar(128),
	@SortOrder		nvarchar(4)
)
AS
BEGIN 

SET @PageIndex = isnull(@PageIndex, -1)
SET @RowPerPage = isnull(@RowPerPage, -1)
SET @WhereClause = isnull(@WhereClause, '')
SET @SortColumn = isnull(@SortColumn, '')
SET @SortOrder = isnull(@SortOrder, '')
SET @TotalRows = 0
SET @RowPerPage = @RowPerPage -1
DECLARE @SQL1 nvarchar(4000)
DECLARE @SQL2 nvarchar(4000)

IF (@WhereClause != '')
BEGIN
	SET @WhereClause = 'WHERE ' + char(13) + @WhereClause	
END

IF (@SortColumn != '')
BEGIN
	SET @SortColumn = 'ORDER BY ' + @SortColumn

	IF (@SortOrder != '')
	BEGIN
		SET @SortColumn = @SortColumn + ' ' + @SortOrder
	END
END
ELSE
BEGIN
	SET @SortColumn = @SortColumn + ' ORDER BY [Id] ASC'
END

SET @SQL1 = 'WITH PasswordResetEntries AS (
			SELECT ROW_NUMBER() OVER ('+ @SortColumn +')AS Row,
	[Id],
	[CompanyId],
	[UserId],
	[PasswordSalt],
	[IsUsed],
	[ResetCounter],
	[UserIP],
	[UserAgent],
	[PageUrl],
	[IsActive],
	[LastUpdatedDate]
				FROM 
				[dbo].[PasswordReset]
					'+ @WhereClause +'
				)
				SELECT 
	[Id],
	[CompanyId],
	[UserId],
	[PasswordSalt],
	[IsUsed],
	[ResetCounter],
	[UserIP],
	[UserAgent],
	[PageUrl],
	[IsActive],
	[LastUpdatedDate]
				FROM 
					PasswordResetEntries
				WHERE 
					Row between '+ CONVERT(nvarchar(10), (@PageIndex * @RowPerPage) + 1) +'And ('+ CONVERT(nvarchar(10), (@PageIndex * @RowPerPage) +@RowPerPage+ 1) +')'
	

SET @SQL2 =		' SELECT @TotalRows = COUNT(*) 
				FROM 
				[dbo].[PasswordReset] ' + @WhereClause
								
EXEC sp_executesql @SQL2, N'@TotalRows int output', @TotalRows = @TotalRows output

EXEC sp_executesql @SQL1

RETURN @@ROWCOUNT
END
GO

/****** Object:  StoredProcedure [dbo].GetPasswordResetByQuery    Script Date: 2/14/2018 5:18:57 PM  ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetPasswordResetByQuery]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetPasswordResetByQuery]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE GetPasswordResetByQuery
(
	@Query	nvarchar(4000)
)
AS
BEGIN 

SET @Query = isnull(@Query, '')
DECLARE @SQL1 nvarchar(4000)

IF (@Query != '')
BEGIN
	SET @Query = 'WHERE ' + char(13) + @Query	
END

SET @SQL1 =		'SELECT * 
				FROM 
				[dbo].[PasswordReset] ' + @Query
								
EXEC sp_executesql @SQL1

RETURN @@ROWCOUNT
END
GO

