using LLP.DataAccess;
using LLP.Entities;
using LLP.Framework;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace LLP.Facade
{
   public class PermissionFacade : BaseFacade
    {
        public PermissionFacade(ClientContext clientContext)
            : base(clientContext)
        {

        }
        PermissionDataAccess _PermissionDataAccess
        {
            get
            {
                return (PermissionDataAccess)_ClientContext[typeof(PermissionDataAccess)];
            }
        }
        UserPermissionDataAccess _UserPermissionDataAccess
        {
            get
            {
                return (UserPermissionDataAccess)_ClientContext[typeof(UserPermissionDataAccess)];
            }
        }
        public bool InsertEmployee(Permission permission)
        {
            return _PermissionDataAccess.Insert(permission) > 0;
        }
        public bool UpdateEmployee(Permission permission)
        {
            return _PermissionDataAccess.Update(permission) > 0;
        }
        public bool DeleteEmployee(int id)
        {
            return _PermissionDataAccess.Delete(id) > 0;
        }
        public Permission GetPermissionById(int id)
        {
            return _PermissionDataAccess.Get(id);
        }
        public Permission GetPermissionName(string PermissionName)
        {

            string query = string.Format(" UserName ='{0}'", PermissionName);
            return _PermissionDataAccess.GetByQuery(query).FirstOrDefault();
        }

        public List<Permission> GetAllPermissionName()
        {

            return _PermissionDataAccess.GetAll();
        }
        public bool IsPermitted(int Id , string userId)
        {
            return _UserPermissionDataAccess.IsPermitted(Id, userId);
        }
    }
}
