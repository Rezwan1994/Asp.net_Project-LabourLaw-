USE llpdb
GO

/****** Object:  StoredProcedure [dbo]..InsertUserActivity    Script Date: 2/14/2018 5:18:57 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[InsertUserActivity]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[InsertUserActivity]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE InsertUserActivity
(
	@Id int OUTPUT,
	@PageUrl nvarchar(max),
	@ReferrerUrl nvarchar(max),
	@Action nvarchar(50),
	@ActionDisplyText nvarchar(250),
	@UserIp nvarchar(100),
	@UserAgent nvarchar(max),
	@UserId uniqueidentifier,
	@StatsDate datetime
)
AS
    INSERT INTO [dbo].[UserActivity] 
	(
	[PageUrl],
	[ReferrerUrl],
	[Action],
	[ActionDisplyText],
	[UserIp],
	[UserAgent],
	[UserId],
	[StatsDate]
    ) 
	VALUES 
	(
	@PageUrl,
	@ReferrerUrl,
	@Action,
	@ActionDisplyText,
	@UserIp,
	@UserAgent,
	@UserId,
	@StatsDate
    )
	DECLARE @Err int
	DECLARE @Result int

	SET @Result = @@ROWCOUNT
	SET @Err = @@ERROR 
	If @Err <> 0 
	BEGIN
		SET @Id = -1
		RETURN @Err
	END
	ELSE
	BEGIN
		If @Result = 1 
		BEGIN
			-- Everything is OK
			SET @Id = @@IDENTITY
		END
		ELSE
		BEGIN
			SET @Id = -1
			RETURN 0
		END
	END

	RETURN @Id
GO

/****** Object:  StoredProcedure [dbo].UpdateUserActivity    Script Date: 2/14/2018 5:18:57 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[UpdateUserActivity]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[UpdateUserActivity]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE UpdateUserActivity
(
	@Id int,
	@PageUrl nvarchar(max),
	@ReferrerUrl nvarchar(max),
	@Action nvarchar(50),
	@ActionDisplyText nvarchar(250),
	@UserIp nvarchar(100),
	@UserAgent nvarchar(max),
	@UserId uniqueidentifier,
	@StatsDate datetime
)
AS
    UPDATE [dbo].[UserActivity] 
	SET
	[PageUrl] = @PageUrl,
	[ReferrerUrl] = @ReferrerUrl,
	[Action] = @Action,
	[ActionDisplyText] = @ActionDisplyText,
	[UserIp] = @UserIp,
	[UserAgent] = @UserAgent,
	[UserId] = @UserId,
	[StatsDate] = @StatsDate
	WHERE ( Id = @Id )

	DECLARE @Err int
	DECLARE @Result int
	SET @Result = @@ROWCOUNT
	SET @Err = @@ERROR 

	If @Err <> 0 
	BEGIN
		SET @Result = -1
	END

	RETURN @Result
GO

/****** Object:  StoredProcedure [dbo].DeleteUserActivity    Script Date: 2/14/2018 5:18:57 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DeleteUserActivity]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[DeleteUserActivity]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE DeleteUserActivity
(
	@Id int
)
AS
	DELETE [dbo].[UserActivity] 

    WHERE ( Id = @Id )

	DECLARE @Err int
	DECLARE @Result int

	SET @Result = @@ROWCOUNT
	SET @Err = @@ERROR 

	If @Err <> 0 
	BEGIN
		SET @Result = -1
	END

	RETURN @Result
GO

/****** Object:  StoredProcedure [dbo].GetAllUserActivity    Script Date: 2/14/2018 5:18:57 PM  ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetAllUserActivity]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetAllUserActivity]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE GetAllUserActivity
AS
	SELECT *		
	FROM
		[dbo].[UserActivity]

RETURN @@ROWCOUNT
GO

/****** Object:  StoredProcedure [dbo].GetUserActivityById    Script Date: 2/14/2018 5:18:57 PM  ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetUserActivityById]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetUserActivityById]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE GetUserActivityById
(
	@Id int
)
AS
	SELECT *		
	FROM
		[dbo].[UserActivity]
	WHERE ( Id = @Id )

RETURN @@ROWCOUNT
GO

/****** Object:  StoredProcedure [dbo].GetUserActivityMaximumId    Script Date: 2/14/2018 5:18:57 PM  ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetUserActivityMaximumId]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetUserActivityMaximumId]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE GetUserActivityMaximumId
AS
	DECLARE @Result int
	SET @Result = 0
	
	SELECT @Result = MAX(Id) 		
	FROM
		[dbo].[UserActivity]

	If @Result > 0 
		BEGIN
			-- Everything is OK
			RETURN @Result
		END
		ELSE
		BEGIN
			RETURN 0
		END
RETURN @Result
GO

/****** Object:  StoredProcedure [dbo].GetUserActivityRowCount    Script Date: 2/14/2018 5:18:57 PM  ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetUserActivityRowCount]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetUserActivityRowCount]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE GetUserActivityRowCount
AS
	DECLARE @Result int
	SET @Result = 0
	SELECT @Result = COUNT(*) 		
	FROM
		[dbo].[UserActivity]
		
RETURN @Result
GO

/****** Object:  StoredProcedure [dbo].GetPagedUserActivity    Script Date: 2/14/2018 5:18:57 PM  ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetPagedUserActivity]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetPagedUserActivity]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE GetPagedUserActivity
(
	@TotalRows		int	OUTPUT,
	@PageIndex	int,
	@RowPerPage		int,
	@WhereClause	nvarchar(4000),
	@SortColumn		nvarchar(128),
	@SortOrder		nvarchar(4)
)
AS
BEGIN 

SET @PageIndex = isnull(@PageIndex, -1)
SET @RowPerPage = isnull(@RowPerPage, -1)
SET @WhereClause = isnull(@WhereClause, '')
SET @SortColumn = isnull(@SortColumn, '')
SET @SortOrder = isnull(@SortOrder, '')
SET @TotalRows = 0
SET @RowPerPage = @RowPerPage -1
DECLARE @SQL1 nvarchar(4000)
DECLARE @SQL2 nvarchar(4000)

IF (@WhereClause != '')
BEGIN
	SET @WhereClause = 'WHERE ' + char(13) + @WhereClause	
END

IF (@SortColumn != '')
BEGIN
	SET @SortColumn = 'ORDER BY ' + @SortColumn

	IF (@SortOrder != '')
	BEGIN
		SET @SortColumn = @SortColumn + ' ' + @SortOrder
	END
END
ELSE
BEGIN
	SET @SortColumn = @SortColumn + ' ORDER BY [Id] ASC'
END

SET @SQL1 = 'WITH UserActivityEntries AS (
			SELECT ROW_NUMBER() OVER ('+ @SortColumn +')AS Row,
	[Id],
	[PageUrl],
	[ReferrerUrl],
	[Action],
	[ActionDisplyText],
	[UserIp],
	[UserAgent],
	[UserId],
	[StatsDate]
				FROM 
				[dbo].[UserActivity]
					'+ @WhereClause +'
				)
				SELECT 
	[Id],
	[PageUrl],
	[ReferrerUrl],
	[Action],
	[ActionDisplyText],
	[UserIp],
	[UserAgent],
	[UserId],
	[StatsDate]
				FROM 
					UserActivityEntries
				WHERE 
					Row between '+ CONVERT(nvarchar(10), (@PageIndex * @RowPerPage) + 1) +'And ('+ CONVERT(nvarchar(10), (@PageIndex * @RowPerPage) +@RowPerPage+ 1) +')'
	

SET @SQL2 =		' SELECT @TotalRows = COUNT(*) 
				FROM 
				[dbo].[UserActivity] ' + @WhereClause
								
EXEC sp_executesql @SQL2, N'@TotalRows int output', @TotalRows = @TotalRows output

EXEC sp_executesql @SQL1

RETURN @@ROWCOUNT
END
GO

/****** Object:  StoredProcedure [dbo].GetUserActivityByQuery    Script Date: 2/14/2018 5:18:57 PM  ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetUserActivityByQuery]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetUserActivityByQuery]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE GetUserActivityByQuery
(
	@Query	nvarchar(4000)
)
AS
BEGIN 

SET @Query = isnull(@Query, '')
DECLARE @SQL1 nvarchar(4000)

IF (@Query != '')
BEGIN
	SET @Query = 'WHERE ' + char(13) + @Query	
END

SET @SQL1 =		'SELECT * 
				FROM 
				[dbo].[UserActivity] ' + @Query
								
EXEC sp_executesql @SQL1

RETURN @@ROWCOUNT
END
GO

